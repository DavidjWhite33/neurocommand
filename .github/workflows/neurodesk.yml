name: Neurodesk CI

on:
  push:
    branches: [ master ]
    paths-ignore: [ '**/README.md' ]  
  pull_request:
    paths-ignore: [ '**/README.md' ] 
    
env:
  DOCKERHUB_ORG: ${{ secrets.DOCKERHUB_ORG }}
  ORACLE_USER: ${{ secrets.ORACLE_USER }}
  ORACLE_NEURODESK_BUCKET: ${{ secrets.ORACLE_NEURODESK_BUCKET }}
  OS_PASSWORD: ${{ secrets.SWIFT_OS_PASSWORD }}
  OS_PROJECT_ID: ${{ secrets.SWIFT_OS_PROJECT_ID }}
  OS_USERNAME: ${{ secrets.SWIFT_OS_USERNAME }}
  OS_APPLICATION_CREDENTIAL_ID: ${{ secrets.SWIFT_OS_APPLICATION_CREDENTIAL_ID }}
  OS_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.SWIFT_OS_APPLICATION_CREDENTIAL_SECRET }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  upload_containers_oracle:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: login to docker hubs
      run: /bin/bash .github/workflows/login_registries.sh
    - name : Check if singularity cache files exist in oracle cloud and swift storage and build if not there
      run: /bin/bash .github/workflows/upload_containers_oracle.sh
  test_neurodesk_cli:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Test neurodesk cli version
      run: /bin/bash .github/workflows/test_neurodesk_cli.sh
  build_vnm:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: login to docker hubs
      run: /bin/bash .github/workflows/login_registries.sh
    - name: Pull latest vnm build from Github Packages
      run: /bin/bash .github/workflows/pull_latest_container_from_gh_packages.sh vnm2
    - name: Build new vnm image
      run: |
        SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)
        docker build . --file vnm/Dockerfile --tag $IMAGEID:$SHORT_SHA --cache-from $IMAGEID --label "GITHUB_REPOSITORY=$GITHUB_REPOSITORY" --label "GITHUB_SHA=$GITHUB_SHA"
        ROOTFS_NEW=$(docker inspect --format='{{.RootFS}}' $IMAGEID:$SHORT_SHA)
        BUILDDATE=`date +%Y%m%d`
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
        echo "ROOTFS_NEW=$ROOTFS_NEW" >> $GITHUB_ENV
        echo "BUILDDATE=$BUILDDATE" >> $GITHUB_ENV
    - name: Push vnm to Github packages (if changes found)
      if: env.GITHUB_REF != 'refs/heads/master' && env.ROOTFS_NEW != env.ROOTFS_CACHE
      run: |
        # Push to GH Packages
        docker tag $IMAGEID:$SHORT_SHA $IMAGEID:$BUILDDATE
        docker tag $IMAGEID:$SHORT_SHA $IMAGEID:latest
        docker push $IMAGEID:latest
        docker push $IMAGEID:$BUILDDATE
  test_vnm_image:
    needs: [build_vnm]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: login to docker hubs
      run: /bin/bash .github/workflows/login_registries.sh
    - name: Pull latest vnm build from Github Packages
      run: /bin/bash .github/workflows/pull_latest_container_from_gh_packages.sh vnm2
    - name: Test VNM container image
      run: |
        echo "[DEBUG] docker run $IMAGEID:$SHORT_SHA ls /neurodesk/"
        # docker run $IMAGEID:$SHORT_SHA ls /neurodesk/
  deploy_vnm_docker:
    needs: [test_vnm_image, test_neurodesk_cli, upload_containers_oracle]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: login to docker hubs
      run: /bin/bash .github/workflows/login_registries.sh
    - name: Pull latest vnm build from Github Packages
      run: /bin/bash .github/workflows/pull_latest_container_from_gh_packages.sh vnm2
    - name: Push vnm to Dockerhub  
      run: |
        BUILDDATE=`date +%Y%m%d`
        echo "[DEBUG] docker IMAGEID: $IMAGEID"
        echo "[DEBUG] docker BUILDDATE: $BUILDDATE"
        docker tag $IMAGEID:latest $DOCKERHUB_ORG/vnm:$BUILDDATE
        docker tag $IMAGEID:latest $DOCKERHUB_ORG/vnm:latest
        docker push $DOCKERHUB_ORG/vnm:latest
        docker push $DOCKERHUB_ORG/vnm:$BUILDDATE
  build_neurodesk:
    needs: [test_neurodesk_cli]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: login to docker hubs
      run: /bin/bash .github/workflows/login_registries.sh
    - name: Pull latest neurodesk build from Github Packages
      run: /bin/bash .github/workflows/pull_latest_container_from_gh_packages.sh neurodesk
    - name: Build new neurodesk image
      run: |
        SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)
        docker build . --file neurodesk/Dockerfile --tag $IMAGEID:$SHORT_SHA --cache-from $IMAGEID --label "GITHUB_REPOSITORY=$GITHUB_REPOSITORY" --label "GITHUB_SHA=$GITHUB_SHA"
        ROOTFS_NEW=$(docker inspect --format='{{.RootFS}}' $IMAGEID:$SHORT_SHA)
        BUILDDATE=`date +%Y%m%d`
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
        echo "ROOTFS_NEW=$ROOTFS_NEW" >> $GITHUB_ENV
        echo "BUILDDATE=$BUILDDATE" >> $GITHUB_ENV
    - name: Push neurodesk to Github packages (if changes found)
      if: env.GITHUB_REF != 'refs/heads/master' && env.ROOTFS_NEW != env.ROOTFS_CACHE
      run: |
        # Push to GH Packages
        docker tag $IMAGEID:$SHORT_SHA $IMAGEID:$BUILDDATE
        docker tag $IMAGEID:$SHORT_SHA $IMAGEID:latest
        docker push $IMAGEID:latest
        docker push $IMAGEID:$BUILDDATE
    - name: Push neurodesk to Dockerhub  (if enabled & changes found)
      if: env.GITHUB_REF != 'refs/heads/master' && env.DOCKERHUB_ORG != ''
      run: |
        # Push to GH Packages
        docker tag $IMAGEID:$SHORT_SHA $DOCKERHUB_ORG/neurodesk:$BUILDDATE
        docker tag $IMAGEID:$SHORT_SHA $DOCKERHUB_ORG/neurodesk:latest
        docker push $DOCKERHUB_ORG/neurodesk:latest
        docker push $DOCKERHUB_ORG/neurodesk:$BUILDDATE
  deploy_neurodesk_simg:
    needs: [upload_containers_oracle, test_neurodesk_cli, build_neurodesk]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: login to docker hubs
      run: /bin/bash .github/workflows/login_registries.sh
    - name: Pull latest neurodesk build from Github Packages
      run: /bin/bash .github/workflows/pull_latest_container_from_gh_packages.sh neurodesk
    - name: Upload Neurodesk Singularity Container simg
      run: /bin/bash .github/workflows/upload_neurodesk_singularity_simg.sh
  deploy_neurodesk_sif:
    needs: [upload_containers_oracle, test_neurodesk_cli, build_neurodesk]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: login to docker hubs
      run: /bin/bash .github/workflows/login_registries.sh
    - name: Pull latest neurodesk build from Github Packages
      run: /bin/bash .github/workflows/pull_latest_container_from_gh_packages.sh neurodesk
    - name: Upload Neurodesk Singularity Container SIF
      run: /bin/bash .github/workflows/upload_neurodesk_singularity_sif.sh